replicaCount: 1
image:
  repository: apache/kafka
  pullPolicy: IfNotPresent
  tag: "latest"
containerEnv:
  - name: KAFKA_NODE_ID
    value: "1"
  - name: KAFKA_PROCESS_ROLES
    value: "broker,controller"
  - name: KAFKA_LISTENERS
    value: "PLAINTEXT://kafka-svc:9092,CONTROLLER://kafka-svc:9093"
  - name: KAFKA_ADVERTISED_LISTENERS
    value: "PLAINTEXT://kafka-svc:9092"
  - name: KAFKA_CONTROLLER_LISTENER_NAMES
    value: "CONTROLLER"
  - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
    value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
  - name: KAFKA_CONTROLLER_QUORUM_VOTERS
    value: "1@kafka-svc:9093"
  - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
    value: "true"
  - name: KAFKA_LOG_DIRS
    value: "/var/lib/kafka/data"
  - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
    value: "1"
  - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
    value: "0"
  - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
    value: "1"
  - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
    value: "1"
  - name: KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR
    value: "1"
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  ports:
    - port: 9092
      name: port-9092
    - port: 9093
      name: port-9093
resources: {}
volumes: {}
volumeMounts: {}
nodeSelector: {}
tolerations: []
affinity: {}